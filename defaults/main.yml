---
# Defaults file for Apache reverse proxy role
#
# apache_apps:
#   - name: 'app.example.com'
#     upstream: 'http://app.int.example.com:8000'
#     type: 'simple-krb'
#     cert: '/etc/ssl/acme/app.example.com/app.example.com_fullchain.cer'
#     key: '/etc/ssl/acme/app.example.com/app.example.com.key'
#     hsts: true
#     krb_passwd: true
#     krb_strip_realm: true  # removes the @realm part from the username
#     hbac_service: 'app'  # if not defined, _all_ valid IPA users are allowed access
#     state: 'present'
#   - name: 'disabled.example.com'
#     state: 'absent'

# SSL ciphers to use (default is very strict!)
apache_ssl_ciphers: 'EECDH+AESGCM:EDH+AESGCM'

# SSL protocols to enable
apache_ssl_protocols: 'TLSv1.2'

# Kerberos authentication
# Supported systems: ipa
apache_kerberos: 'none'

# IPA server used when apache_kerberos == 'ipa'
apache_ipa_server: 'ipa.example.com'

# Automatically create the required Kerberos Principal in IPA
# Requires credentials for a user with administrative privileges on the host in IPA
apache_ipa_manage_principal: true

# By default the role will only create a Kerberos Principal for the FQDN, set the list below
# to define any additional hostnames that this system will serve
apache_additional_principals: []
  # - "HTTP/nothostname.example.com@{{ ipaclient_domain | uppper }}"

apache_kerberos_windows_compat: false  # Disables GSSAPI negotiation on Windows browsers
                                       # which could fix some authentication issues

# IPA credentials, the default vars match freeipa.ansible_freeipa collection roles
apache_ipa_username: "{{ ipaadmin_principal }}"
apache_ipa_password: "{{ ipaadmin_password }}"

# Set to true if you are using certbot
apache_certbot: false
